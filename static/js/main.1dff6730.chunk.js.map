{"version":3,"sources":["APIs/starwars.js","components/catalog.js","components/pagination.js","components/search.js","components/delete.js","components/starwarsTable.js","components/starwars.js","components/navBar.js","APIs/cats.js","components/catsTable.js","components/cats.js","APIs/covid.js","components/paginationComponent.js","components/covidTable.js","components/covid.js","components/item.js","components/dashboard.js","index.js"],"names":["starwars","getPeople","axios","get","response","data","results","getPlanets","getStarships","Catalog","props","catalogList","onSelect","selectedIndex","getClasses","index","className","map","catalog","type","onClick","name","Pagination","pageSize","totalItems","onPageSelect","currentPage","totalPages","Math","ceil","pages","_","range","page","href","Search","id","placeholder","onChange","e","onSearch","target","value","Delete","onDelete","item","StarwarsTable","items","onSort","sortBy","navigate","useNavigate","Fragment","scope","console","log","state","Starwars","useState","setData","planets","setPlanets","starships","setStarships","searchText","setSearchText","pageNo","setPageNo","catalogItem","setCatalogItem","setSortBy","useEffect","then","availableDataList","length","displayData","filter","people","includes","planet","starship","getAvailableDataList","numberOfItems","pageStart","start","getPageStartIndex","pageEnd","orderBy","slice","input","remainingData","pno","NavBar","to","cats","get100Cats","getRandomCat","CatsTable","url","width","height","Cats","seqCats","setSeqCats","randCats","setRandCats","cat","randcat","covid","getCurrentCovidStats","getHistoricDailyCovidStats","PaginationComponent","total","itemsPerPage","onPageChange","paginationItems","createPaginationItem","i","Item","active","push","Ellipsis","midpoint","Prev","disabled","Next","CovidTable","date","positive","positiveIncrease","Covid","covidLive","setCovidLive","covidHistory","setCovidHistory","live","history","useLocation","listitem","Object","entries","key","dataItemToKeyValues","Dashboard","path","element","testing","replace","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1dff6730.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst starwars = {\r\n  getPeople: async () => {\r\n    try {\r\n      const response = await axios.get('https://swapi.dev/api/people');\r\n      return response.data.results;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  },\r\n  getPlanets: async () => {\r\n    try {\r\n      const response = await axios.get('https://swapi.dev/api/planets');\r\n      return response.data.results;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  },\r\n  getStarships: async () => {\r\n    try {\r\n      const response = await axios.get('https://swapi.dev/api/starships');\r\n      return response.data.results;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default starwars;\r\n","import React from 'react';\n\nfunction Catalog(props) {\n  const { catalogList, onSelect, selectedIndex } = props;\n\n  const getClasses = (index) => {\n    return index === selectedIndex\n      ? 'list-group-item list-group-item-action active'\n      : 'list-group-item list-group-item-action';\n  };\n  return (\n    <div className=\"list-group\">\n      {catalogList.map((catalog, index) => {\n        return (\n          <button\n            type=\"button\"\n            key={catalog.name}\n            className={getClasses(index)}\n            onClick={() => {\n              onSelect(index);\n            }}\n          >\n            {catalog.name}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Catalog;\n","import React from 'react';\nimport _ from 'lodash';\n\nfunction Pagination(props) {\n  const { pageSize, totalItems, onPageSelect, currentPage } = props;\n  const totalPages = Math.ceil(totalItems / pageSize);\n\n  const pages = _.range(1, totalPages + 1);\n\n  const getClasses = (page) => {\n    return page === currentPage ? 'page-item active' : 'page-item';\n  };\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => {\n          return (\n            <li\n              className={getClasses(page)}\n              key={page}\n              onClick={() => {\n                onPageSelect(page);\n              }}\n            >\n              <a className=\"page-link\" href=\"#\">\n                {page}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Pagination;\n","import React from 'react';\nfunction Search(props) {\n  return (\n    <div className=\"form-outline\">\n      <input\n        type=\"text\"\n        id=\"search-text\"\n        className=\"form-control\"\n        placeholder=\"Type to search...\"\n        onChange={(e) => {\n          props.onSearch(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Search;\n","import React from 'react';\nfunction Delete(props) {\n  return (\n    <button\n      className=\"btn btn-danger\"\n      type=\"button\"\n      onClick={() => {\n        props.onDelete(props.item);\n      }}\n    >\n      Delete\n    </button>\n  );\n}\n\nexport default Delete;\n","import React from 'react';\nimport Delete from './delete';\nimport { useNavigate } from 'react-router-dom';\n\nfunction StarwarsTable(props) {\n  const { items, onSort, onDelete, sortBy } = props;\n  const navigate = useNavigate();\n\n  const toComponentItem = (data) => {\n    console.log('toComponentItem()-> data', data);\n    navigate('/item', { state: data });\n  };\n\n  const getSortClasses = () => {\n    return sortBy === 'asc' ? 'fa fa-sort-asc' : 'fa fa-sort-desc';\n  };\n\n  return (\n    <React.Fragment>\n      {items !== null ? (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th className=\"col-sm\" onClick={onSort}>\n                Name\n                <i className={getSortClasses()}></i>\n              </th>\n              <th className=\"col-sm-2\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item, index) => {\n              return (\n                <tr key={index}>\n                  <td scope=\"row\">\n                    <a\n                      className=\"item-name\"\n                      onClick={() => {\n                        toComponentItem(item);\n                      }}\n                    >\n                      {item.name}\n                    </a>\n                  </td>\n                  <td>\n                    <Delete onDelete={onDelete} item={item} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      ) : (\n        <h1>Loading...</h1>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default StarwarsTable;\n","import _ from 'lodash';\r\nimport React, { useState, useEffect } from 'react';\r\nimport starwars from '../APIs/starwars';\r\nimport Catalog from './catalog';\r\nimport Pagination from './pagination';\r\nimport Search from './search';\r\n// import People from './people';\r\n// import Planets from './planets';\r\n// import Starships from './starships';\r\nimport StarwarsTable from './starwarsTable';\r\n\r\nfunction Starwars(props) {\r\n  const [data, setData] = useState([]);\r\n  const [planets, setPlanets] = useState([]);\r\n  const [starships, setStarships] = useState([]);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [pageNo, setPageNo] = useState(1);\r\n  const [catalogItem, setCatalogItem] = useState(0);\r\n  const [sortBy, setSortBy] = useState('asc');\r\n  const pageSize = 5;\r\n\r\n  const catalogList = [\r\n    { name: 'people' },\r\n    { name: 'planets' },\r\n    { name: 'starships' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    starwars.getPeople().then((response) => {\r\n      console.log('people', response);\r\n      setData(response);\r\n    });\r\n    starwars.getPlanets().then((response) => {\r\n      console.log('planets', response);\r\n      setPlanets(response);\r\n    });\r\n    starwars.getStarships().then((response) => {\r\n      console.log('startships', response);\r\n      setStarships(response);\r\n    });\r\n  }, []);\r\n\r\n  const onSearchHandler = (input) => {\r\n    setSearchText(input);\r\n  };\r\n\r\n  const onItemDeleteHandler = (item) => {\r\n    if (catalogItem === 0) {\r\n      const remainingData = data.filter((people) => {\r\n        return people.name !== item.name;\r\n      });\r\n      setData(remainingData);\r\n    } else if (catalogItem === 1) {\r\n      const remainingData = planets.filter((planet) => {\r\n        return planet.name !== item.name;\r\n      });\r\n      setPlanets(remainingData);\r\n    } else {\r\n      const remainingData = starships.filter((starship) => {\r\n        return starship.name !== item.name;\r\n      });\r\n      setStarships(remainingData);\r\n    }\r\n  };\r\n\r\n  const onPaginationHandler = (pno) => {\r\n    setPageNo(pno);\r\n  };\r\n\r\n  const onCatelogItemSelectHandler = (index) => {\r\n    setCatalogItem(index);\r\n  };\r\n\r\n  const onSortHandler = () => {\r\n    const sorting = sortBy === 'asc' ? 'desc' : 'asc';\r\n    setSortBy(sorting);\r\n  };\r\n\r\n  const getAvailableDataList = () => {\r\n    if (catalogItem === 0) {\r\n      if (data.length) {\r\n        let displayData = [...data];\r\n        if (searchText)\r\n          displayData = data.filter((people) => {\r\n            return people.name.includes(searchText);\r\n          });\r\n        return displayData;\r\n      } else return null;\r\n    } else if (catalogItem === 1) {\r\n      if (planets.length) {\r\n        let displayData = [...planets];\r\n        if (searchText)\r\n          displayData = planets.filter((planet) => {\r\n            return planet.name.includes(searchText);\r\n          });\r\n        return displayData;\r\n      } else return null;\r\n    } else {\r\n      if (starships.length) {\r\n        let displayData = [...starships];\r\n        if (searchText)\r\n          displayData = starships.filter((starship) => {\r\n            return starship.name.includes(searchText);\r\n          });\r\n        return displayData;\r\n      } else return null;\r\n    }\r\n  };\r\n\r\n  const getPageStartIndex = () => {\r\n    const start = (pageNo - 1) * pageSize;\r\n    if (pageNo > 1) {\r\n      return searchText === '' ? start : 0;\r\n    }\r\n    return start;\r\n  };\r\n\r\n  const availableDataList = getAvailableDataList();\r\n  let numberOfItems = 0;\r\n  let sortedlist = null;\r\n  let displayData = null;\r\n  const pageStart = getPageStartIndex();\r\n  const pageEnd = pageStart + pageSize;\r\n  if (availableDataList) {\r\n    console.log('availabledataList: ', availableDataList);\r\n    numberOfItems = availableDataList.length;\r\n    sortedlist = _.orderBy(availableDataList, ['id'], [sortBy]);\r\n    displayData = sortedlist.slice(pageStart, pageEnd);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"grid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <div className=\"row\">\r\n              <Catalog\r\n                catalogList={catalogList}\r\n                onSelect={onCatelogItemSelectHandler}\r\n                selectedIndex={catalogItem}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <Search onSearch={onSearchHandler} />\r\n            <StarwarsTable\r\n              items={displayData}\r\n              onSort={onSortHandler}\r\n              onDelete={onItemDeleteHandler}\r\n              sortBy={sortBy}\r\n            />\r\n            <Pagination\r\n              onPageSelect={onPaginationHandler}\r\n              totalItems={numberOfItems}\r\n              pageSize={pageSize}\r\n              currentPage={pageNo}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Starwars;\r\n","import { Link, NavLink } from 'react-router-dom';\n\nfunction NavBar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          WEALTH\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <div className=\"navbar-nav\">\n            <NavLink className=\"nav-item nav-link\" to=\"/starwars\">\n              Startwars\n            </NavLink>\n            <NavLink className=\"nav-item nav-link\" to=\"/cats\">\n              Cats\n            </NavLink>\n            <NavLink className=\"nav-item nav-link\" to=\"/covid\">\n              Covid\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import axios from 'axios';\r\n\r\n//documentation @https://docs.thecatapi.com/\r\n//feel free to add more functions!\r\n\r\nconst cats = {\r\n  get100Cats: async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.thecatapi.com/v1/images/search?limit=100'\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  },\r\n  getRandomCat: async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.thecatapi.com/v1/images/search'\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default cats;\r\n","import React from 'react';\nimport Delete from './delete';\nimport { useNavigate } from 'react-router-dom';\n\nfunction CatsTable(props) {\n  const { items, onSort, onDelete, sortBy } = props;\n  const navigate = useNavigate();\n\n  const toComponentItem = (data) => {\n    console.log('toComponentItem()-> data', data);\n    navigate('/item', { state: data });\n  };\n\n  const getSortClasses = () => {\n    return sortBy === 'asc' ? 'fa fa-sort-asc' : 'fa fa-sort-desc';\n  };\n\n  return (\n    <React.Fragment>\n      {items !== null ? (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th className=\"col-sm\" onClick={onSort}>\n                Id\n                <i className={getSortClasses()}></i>\n              </th>\n              <th className=\"col-sm-2\">url</th>\n              <th className=\"col-sm-2\">width</th>\n              <th className=\"col-sm-2\">height</th>\n              <th className=\"col-sm-2\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item, index) => {\n              return (\n                <tr key={index}>\n                  <td scope=\"row\">\n                    <a\n                      className=\"item-name\"\n                      onClick={() => {\n                        toComponentItem(item);\n                      }}\n                    >\n                      {item.id}\n                    </a>\n                  </td>\n                  <td scope=\"row\">\n                    <a className=\"item-name\" href={item.url} target=\"_blank\">\n                      {item.url}\n                    </a>\n                  </td>\n                  <td scope=\"row\">{item.width}</td>\n                  <td scope=\"row\">{item.height}</td>\n                  <td>\n                    <Delete onDelete={onDelete} item={item} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      ) : (\n        <h1>Loading...</h1>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default CatsTable;\n","import _ from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport cats from '../APIs/cats';\nimport Catalog from './catalog';\nimport Pagination from './pagination';\nimport Search from './search';\nimport CatsTable from './catsTable';\n\nfunction Cats(props) {\n  const [seqCats, setSeqCats] = useState([]);\n  const [randCats, setRandCats] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [pageNo, setPageNo] = useState(1);\n  const [catalogItem, setCatalogItem] = useState(0);\n  const [sortBy, setSortBy] = useState('asc');\n  const pageSize = 5;\n\n  const catalogList = [{ name: 'seqcats' }, { name: 'randcats' }];\n\n  useEffect(() => {\n    cats.get100Cats().then((response) => {\n      console.log('cats', response);\n      setSeqCats(response);\n    });\n\n    cats.getRandomCat().then((response) => {\n      console.log('random cats', response);\n      setRandCats(response);\n    });\n  }, []);\n\n  const onSearchHandler = (input) => {\n    setSearchText(input);\n  };\n\n  const onItemDeleteHandler = (item) => {\n    if (catalogItem === 0) {\n      const remainingData = seqCats.filter((cat) => {\n        return cat.id !== item.id;\n      });\n      setData(remainingData);\n    } else {\n      const remainingData = randCats.filter((planet) => {\n        return planet.name !== item.id;\n      });\n      setRandCats(remainingData);\n    }\n  };\n\n  const onPaginationHandler = (pno) => {\n    setPageNo(pno);\n  };\n\n  const onCatelogItemSelectHandler = (index) => {\n    setCatalogItem(index);\n  };\n\n  const onSortHandler = () => {\n    const sorting = sortBy === 'asc' ? 'desc' : 'asc';\n    setSortBy(sorting);\n  };\n\n  const getAvailableDataList = () => {\n    if (catalogItem === 0) {\n      if (seqCats.length) {\n        let displayData = [...seqCats];\n        if (searchText)\n          displayData = seqCats.filter((cat) => {\n            return cat.id.includes(searchText);\n          });\n        return displayData;\n      }\n      return null;\n    } else {\n      if (randCats.length) {\n        let displayData = [...randCats];\n        if (searchText)\n          displayData = randCats.filter((randcat) => {\n            return randcat.id.includes(searchText);\n          });\n        return displayData;\n      }\n      return null;\n    }\n  };\n\n  const getPageStartIndex = () => {\n    const start = (pageNo - 1) * pageSize;\n    if (pageNo > 1) {\n      return searchText === '' ? start : 0;\n    }\n    return start;\n  };\n\n  const availableDataList = getAvailableDataList();\n  let numberOfItems = 0;\n  let sortedlist = null;\n  let displayData = null;\n  const pageStart = getPageStartIndex();\n  const pageEnd = pageStart + pageSize;\n  if (availableDataList) {\n    console.log('availabledataList: ', availableDataList);\n    numberOfItems = availableDataList.length;\n    sortedlist = _.orderBy(availableDataList, ['id'], [sortBy]);\n    displayData = sortedlist.slice(pageStart, pageEnd);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"grid\">\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <div className=\"row\">\n              <Catalog\n                catalogList={catalogList}\n                onSelect={onCatelogItemSelectHandler}\n                selectedIndex={catalogItem}\n              />\n            </div>\n          </div>\n          <div className=\"col\">\n            <Search onSearch={onSearchHandler} />\n            <CatsTable\n              items={displayData}\n              onSort={onSortHandler}\n              onDelete={onItemDeleteHandler}\n              sortBy={sortBy}\n            />\n            <Pagination\n              onPageSelect={onPaginationHandler}\n              totalItems={numberOfItems}\n              pageSize={pageSize}\n              currentPage={pageNo}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Cats;\n","import axios from 'axios';\r\n\r\n//documentation @https://covidtracking.com/data/api\r\n//feel free to add more functions!\r\n\r\nconst covid = {\r\n  getCurrentCovidStats: async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.covidtracking.com/v1/states/current.json?'\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  },\r\n  getHistoricDailyCovidStats: async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.covidtracking.com/v1/states/daily.json'\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default covid;\r\n","import React from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\n\nconst PaginationComponent = ({\n  total = 0,\n  itemsPerPage = 10,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / itemsPerPage);\n  const paginationItems = [];\n\n  if (totalPages === 0) return null;\n\n  const createPaginationItem = (i) => {\n    return (\n      <Pagination.Item\n        key={i}\n        active={i === currentPage}\n        onClick={() => onPageChange(i)}\n      >\n        {i}\n      </Pagination.Item>\n    );\n  };\n\n  // Add the first item (page 1)\n  paginationItems.push(createPaginationItem(1));\n  // Add an ellipsis\n  paginationItems.push(<Pagination.Ellipsis />);\n  const midpoint = totalPages / 2;\n  console.log('midpoint: ', midpoint);\n  // Create page numbers in the middle\n  for (let i = midpoint; i <= midpoint + 4; i++) {\n    console.log('index : ', i);\n    paginationItems.push(createPaginationItem(i));\n  }\n  // Add an ellipsis\n  paginationItems.push(<Pagination.Ellipsis />);\n  // Add the last item (page N)\n  paginationItems.push(createPaginationItem(totalPages));\n\n  console.log('paginationItems: ', paginationItems);\n\n  return (\n    <Pagination className=\"paginationInfo\">\n      <Pagination.Prev\n        onClick={() => onPageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      />\n      {paginationItems}\n      <Pagination.Next\n        onClick={() => onPageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n      />\n    </Pagination>\n  );\n};\n\nexport default PaginationComponent;\n","import React from 'react';\nimport Delete from './delete';\nimport { useNavigate } from 'react-router-dom';\n\nfunction CovidTable(props) {\n  const { items, onSort, onDelete, sortBy } = props;\n  const navigate = useNavigate();\n\n  const toComponentItem = (data) => {\n    console.log('toComponentItem()-> data', data);\n    navigate('/item', { state: data });\n  };\n\n  const getSortClasses = () => {\n    return sortBy === 'asc' ? 'fa fa-sort-asc' : 'fa fa-sort-desc';\n  };\n\n  return (\n    <React.Fragment>\n      {items !== null ? (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th className=\"col-sm\" onClick={onSort}>\n                state\n                <i className={getSortClasses()}></i>\n              </th>\n              <th className=\"col-sm-2\">date</th>\n              <th className=\"col-sm-2\">positive</th>\n              <th className=\"col-sm-2\">positiveIncrease</th>\n              <th className=\"col-sm-2\">total</th>\n              <th className=\"col-sm-2\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item, index) => {\n              return (\n                <tr key={index}>\n                  <td scope=\"row\">\n                    <a\n                      className=\"item-name\"\n                      onClick={() => {\n                        toComponentItem(item);\n                      }}\n                    >\n                      {item.state}\n                    </a>\n                  </td>\n                  <td scope=\"row\">{item.date}</td>\n                  <td scope=\"row\">{item.positive}</td>\n                  <td scope=\"row\">{item.positiveIncrease}</td>\n                  <td scope=\"row\">{item.total}</td>\n                  <td>\n                    <Delete onDelete={onDelete} item={item} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      ) : (\n        <h1>Loading...</h1>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default CovidTable;\n","import _ from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport covid from '../APIs/covid';\nimport Catalog from './catalog';\nimport PaginationComponent from './paginationComponent';\nimport Search from './search';\nimport CovidTable from './covidTable';\n\nfunction Covid(props) {\n  const [covidLive, setCovidLive] = useState([]);\n  const [covidHistory, setCovidHistory] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [pageNo, setPageNo] = useState(1);\n  const [catalogItem, setCatalogItem] = useState(0);\n  const [sortBy, setSortBy] = useState('asc');\n  const pageSize = 5;\n\n  const catalogList = [{ name: 'live' }, { name: 'history' }];\n\n  useEffect(() => {\n    covid.getCurrentCovidStats().then((response) => {\n      console.log('covid live', response);\n      setCovidLive(response);\n    });\n\n    covid.getHistoricDailyCovidStats().then((response) => {\n      console.log('covid history', response);\n      // if (response.length > 120) setCovidHistory(response.slice(0, 120));\n      // else setCovidHistory(response);\n      setCovidHistory(response);\n    });\n  }, []);\n\n  const onSearchHandler = (input) => {\n    setSearchText(input);\n  };\n\n  const onItemDeleteHandler = (item) => {\n    if (catalogItem === 0) {\n      const remainingData = covidLive.filter((live) => {\n        return live.state !== item.state;\n      });\n      setCovidLive(remainingData);\n    } else {\n      const remainingData = covidHistory.filter((history) => {\n        return history.state !== item.state;\n      });\n      setCovidHistory(remainingData);\n    }\n  };\n\n  const onPaginationHandler = (pno) => {\n    setPageNo(pno);\n  };\n\n  const onCatelogItemSelectHandler = (index) => {\n    setCatalogItem(index);\n  };\n\n  const onSortHandler = () => {\n    const sorting = sortBy === 'asc' ? 'desc' : 'asc';\n    setSortBy(sorting);\n  };\n\n  const getAvailableDataList = () => {\n    if (catalogItem === 0) {\n      if (covidLive.length) {\n        let displayData = [...covidLive];\n        if (searchText)\n          displayData = covidLive.filter((live) => {\n            return live.state.includes(searchText);\n          });\n        return displayData;\n      }\n      return null;\n    } else {\n      if (covidHistory.length) {\n        let displayData = [...covidHistory];\n        if (searchText)\n          displayData = covidHistory.filter((history) => {\n            return history.state.includes(searchText);\n          });\n        return displayData;\n      }\n      return null;\n    }\n  };\n\n  const getPageStartIndex = () => {\n    const start = (pageNo - 1) * pageSize;\n    if (pageNo > 1) {\n      return searchText === '' ? start : 0;\n    }\n    return start;\n  };\n\n  const availableDataList = getAvailableDataList();\n  let numberOfItems = 0;\n  let sortedlist = null;\n  let displayData = null;\n  const pageStart = getPageStartIndex();\n  const pageEnd = pageStart + pageSize;\n  if (availableDataList) {\n    console.log('availabledataList: ', availableDataList);\n    numberOfItems = availableDataList.length;\n    sortedlist = _.orderBy(availableDataList, ['id'], [sortBy]);\n    displayData = sortedlist.slice(pageStart, pageEnd);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"grid\">\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <div className=\"row\">\n              <Catalog\n                catalogList={catalogList}\n                onSelect={onCatelogItemSelectHandler}\n                selectedIndex={catalogItem}\n              />\n            </div>\n          </div>\n          <div className=\"col\">\n            <Search onSearch={onSearchHandler} />\n            <CovidTable\n              items={displayData}\n              onSort={onSortHandler}\n              onDelete={onItemDeleteHandler}\n              sortBy={sortBy}\n            />\n            <PaginationComponent\n              onPageChange={onPaginationHandler}\n              total={numberOfItems}\n              itemsPerPage={pageSize}\n              currentPage={pageNo}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Covid;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nfunction Item() {\n  let navigate = useNavigate();\n  let location = useLocation();\n\n  const data = location.state;\n\n  const dataItemToKeyValues = (item) => {\n    const entries = Object.entries(item);\n    const listitem = entries.map(([key, value]) => {\n      return (\n        <li\n          className=\"list-group-item d-flex justify-content-between align-items-start\"\n          key={key}\n        >\n          <div className=\"ms-2 me-auto\">\n            <div className=\"fw-bold\">{key}</div>\n            {value}\n          </div>\n        </li>\n      );\n    });\n    return <ol className=\"list-group list-group-numbered\">{listitem}</ol>;\n  };\n  return (\n    <div>\n      <span className=\"item-detail\">Detail Info</span>\n      <button\n        className=\"btn btn-primary back-btn\"\n        onClick={() => {\n          navigate('/starwars');\n        }}\n      >\n        Back\n      </button>\n      {!data ? 'Loading' : <ul>{dataItemToKeyValues(data)}</ul>}\n    </div>\n  );\n}\n\nexport default Item;\n","import React from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport Starwars from './starwars';\nimport NavBar from './navBar';\nimport Cats from './cats';\nimport Covid from './covid';\nimport Item from './item';\n\nconst Dashboard = () => {\n  return (\n    <div>\n      <NavBar />\n      <Routes>\n        <Route path=\"/starwars\" element={<Starwars testing=\"new\" />}></Route>\n        <Route path=\"/cats\" element={<Cats />}></Route>\n        <Route path=\"/covid\" element={<Covid />}></Route>\n        <Route path=\"/item\" element={<Item />}></Route>\n        <Route path=\"/\" element={<Starwars />}></Route>\n        <Route path=\"*\" element={<Navigate to=\"/starwars\" replace={true} />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport Dashboard from './components/dashboard';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Dashboard />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n//render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}